<?xml version="1.0" encoding="utf-8" ?>
<!--assembly:程序集，namespace:命名空间-->
<hibernate-mapping  xmlns="urn:nhibernate-mapping-2.2"
					assembly="Domain"  namespace="Domain.Network.Entities">
  <class name="Domain.Network.Entities.NetNode,Domain" table="Net_Node">
    <!--主键，编号-->
    <id name="Guid" type="Guid" >
      <column name="net_node_guid" sql-type="uniqueidentifier" unique="true" not-null="true"/>
    </id>
    <!--基本描述信息-->
    <component name="AgentProperty" class="Domain.Entities.Agent,Domain">
      <property name="Gender" type="string">
        <column  name="gender" sql-type="nvarchar(10)" length="10"/>
      </property>
      <property name="Age" type="int">
        <column name="age" sql-type="int"/>
      </property>
      <property name="Longitude" type="int">
        <column name="longitude" sql-type="int"/>
      </property>
      <property name="Latitude" type="int">
        <column name="latitude" sql-type="int"/>
      </property>
      <!--映射关系，多对一，职业-->
      <many-to-one name="Occupation" column="occupation_guid"
              class="Domain.Entities.Occupation,Domain"
             foreign-key="FK_AgentProperty_Occupation" />
      <!--映射关系，多对一，受教育程度-->
      <many-to-one name="EduLevel" column="edu_level_guid"
              class="Domain.Entities.EduLevel,Domain"
             foreign-key="FK_AgentProperty_EduLevel" />
      <many-to-one name="AgeLevel" column="age_level_guid"
          class="Domain.Entities.AgeLevel,Domain"
         foreign-key="FK_AgentProperty_AgeLevel" />
    </component>
    <!---->
    <set name="NetEdges1" table="Net_Edge" generic="true" inverse="true" cascade="all">
      <key column="net_node1_guid"  foreign-key="FK_Node1_Edge"></key>
      <one-to-many class="Domain.Network.Entities.NetEdge,Domain"  />
    </set>
    <set name="NetEdges2" table="Net_Edge" generic="true" inverse="true" cascade="all">
      <key column="net_node2_guid"  foreign-key="FK_Node2_Edge"></key>
      <one-to-many class="Domain.Network.Entities.NetEdge,Domain"  />
    </set>
    <set name="PropositionLearningConfigs" table="Proposition_Learning_Config" generic="true" inverse="true" cascade="all">
      <key column="net_node_guid"  foreign-key="FK_Node_Proposition_Learning"></key>
      <one-to-many class="Domain.Entities.PropositionLearningConfig,Domain"  />
    </set>
    <set name="RumorLearningConfigs" table="Rumor_Learning_Config" generic="true" inverse="true" cascade="all">
      <key column="net_node_guid"  foreign-key="FK_Node_Rumor_Learning"></key>
      <one-to-many class="Domain.Entities.RumorLearningConfig,Domain"  />
    </set>
    <many-to-one name="NetworkResult" column="network_result_guid"
  class="Domain.Network.Entities.NetworkResult,Domain"
  foreign-key="FK_Network_Result_Node" />
  </class>
</hibernate-mapping>